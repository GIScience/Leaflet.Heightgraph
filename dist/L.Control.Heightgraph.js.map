{"version":3,"sources":["../src/L.Control.Heightgraph.js"],"names":["L","Control","Heightgraph","extend","options","position","width","height","margins","top","right","bottom","left","mappings","undefined","expand","translation","expandCallback","xTicks","yTicks","highlightStyle","_defaultTranslation","distance","elevation","segment_length","type","legend","_init_options","_margin","_width","_height","_mappings","_svgWidth","_svgHeight","_selectedOption","_highlightStyle","color","onAdd","map","container","_container","DomUtil","create","DomEvent","disableClickPropagation","buttonContainer","_button","link","closeButton","_closeButton","_showState","_initToggle","svg","_svg","d3","select","append","attr","onRemove","_removeMarkedSegmentsOnMap","addData","data","selectAll","remove","_data","_prepareData","_computeStats","_appendScales","_appendGrid","_createChart","length","_createSelectionBox","_expand","Browser","touch","on","stopPropagation","_dragHandler","event","preventDefault","_gotDragged","_drawDragRectangle","_dragStartCoords","dragEndCoords","_dragCurrentCoords","mouse","_background","node","x1","Math","min","x2","max","_dragRectangle","_dragRectangleG","g","style","_resetDrag","_dragEndHandler","item1","_findItemForX","item2","_fitSection","_dragStartHandler","_calculateFullExtent","Error","full_extent","latLngBounds","latlng","forEach","item","contains","index1","index2","start","end","ext","_areasFlattended","slice","_map","fitBounds","_removeChart","_randomNumber","round","random","_d3ColorCategorical","_profile","coordinates","elevations","cumDistances","push","blocks","categorical","colorScale","randomNumber","scaleOrdinal","name","y","cumDistance","info","id","text","properties","summary","distances","attributes","geometries","i","cnt","usedColors","features","altitude","ptA","ptB","ptDistance","geometry","coordsLength","attributeType","attribute","j","LatLng","distanceTo","x","lng","lat","areaIdx","totalDistance","maxElevation","minElevation","quantile","elevationQuantile","yElevationMin","yElevationMax","_showMarker","ll","layerpoint","latLngToLayerPoint","normalizedY","_mouseHeightFocus","heightG","_mouseHeightFocusLabel","_mouseHeightFocusLabelRect","_mouseHeightFocusLabelTextElev","_mouseHeightFocusLabelTextType","pointG","_pointG","maxWidth","_dynamicBoxSize","maxHeight","idx","areas","concat","apply","_appendAreas","_createFocus","_appendBackground","_createBorderTopLine","_createLegend","_createHorizontalLine","boxPosition","textDistance","_focus","_focusLineGroup","_focusRect","_y","_focusDistance","_getTranslation","_focusHeight","_focusBlockDistance","_focusType","_areaTspan","_typeTspan","_focusLine","_distTspan","_altTspan","self","_horizontalLine","_elevationValueText","jsonTriangle","symbolTriangle","dragstart","d","raise","classed","dragged","maxY","eventY","angle","_highlightedCoords","_findCoordsForY","format","invert","_markSegmentsOnMap","dragend","horizontalDrag","enter","symbol","size","call","drag","coords","_markedSegments","featureGroup","linePart","polyline","addTo","bringToFront","removeLayer","shortDist","Boolean","yHeightMin","yHeightMax","margin","_x","scaleLinear","range","domain","_xAxis","axisBottom","scale","tickFormat","ticks","pow","_yAxis","axisLeft","_yEndAxis","axisRight","_yEnd","background","_mousemoveHandler","bind","_mouseoutHandler","android","_make_x_axis","tickSize","_make_y_axis","block","eleIdx","c","area","_area","xDiagonalCoordinate","y0","y1","curve","curveLinear","_areapath","datum","jsonTriangles","selectionSign","arrowRight","arrowLeft","chooseSelection","_selectionText","selection","leg","legendRectSize","legendSpacing","offset","horizontal","vertical","textProp","_boxBoundY","legendHover","className","nodes","widths","getBoundingClientRect","borderTopLine","line","curveBasis","param","ctx","areaLength","alt","dist","boxWidth","toFixed","xPositionBox","totalWidth","bisect","bisector","xInvert","b","yInvert","list","newList","k","l","key","console","error","control","heightgraph"],"mappings":"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","sourcesContent":["L.Control.Heightgraph = L.Control.extend({\n    options: {\n        position: \"bottomright\",\n        width: 800,\n        height: 280,\n        margins: {\n            top: 10,\n            right: 30,\n            bottom: 55,\n            left: 50\n        },\n        mappings: undefined,\n        expand: true,\n        translation: {},\n        expandCallback: undefined,\n        xTicks: undefined,\n        yTicks: undefined,\n        highlightStyle: undefined\n    },\n    _defaultTranslation: {\n        distance: \"Distance\",\n        elevation: \"Elevation\",\n        segment_length: \"Segment length\",\n        type: \"Type\",\n        legend: \"Legend\"\n    },\n    _init_options() {\n        this._margin = this.options.margins;\n        this._width = this.options.width;\n        this._height = this.options.height;\n        this._mappings = this.options.mappings;\n        this._svgWidth = this._width - this._margin.left - this._margin.right;\n        this._svgHeight = this._height - this._margin.top - this._margin.bottom;\n        this._selectedOption = 0\n        this._highlightStyle = this.options.highlightStyle || {color: 'red'}\n    },\n    onAdd(map) {\n        let container = this._container = L.DomUtil.create(\"div\", \"heightgraph\")\n        L.DomEvent.disableClickPropagation(container);\n        let buttonContainer = this._button = L.DomUtil.create('div', \"heightgraph-toggle\", container);\n        const link = L.DomUtil.create(\"a\", \"heightgraph-toggle-icon\", buttonContainer)\n        const closeButton = this._closeButton = L.DomUtil.create(\"a\", \"heightgraph-close-icon\", container)\n        this._showState = false;\n        this._initToggle();\n        this._init_options();\n        const svg = this._svg = d3.select(this._container).append(\"svg\").attr(\"class\", \"heightgraph-container\").\n            attr(\"width\", this._svgWidth + this._margin.left + this._margin.right).\n            attr(\"height\", this._svgHeight + this._margin.top + this._margin.bottom).append(\"g\").\n            attr(\"transform\", \"translate(\" + this._margin.left + \",\" + this._margin.top + \")\")\n        return container;\n    },\n    onRemove(map) {\n        this._removeMarkedSegmentsOnMap();\n        this._container = null;\n        this._svg = undefined;\n    },\n    /**\n     * add Data from geoJson and call all functions\n     * @param {Object} data\n     */\n    addData(data) {\n        if (this._svg !== undefined) {\n            this._svg.selectAll(\"*\")\n                .remove();\n        }\n        this._data = data;\n        this._init_options();\n        this._prepareData();\n        this._computeStats();\n        this._appendScales();\n        this._appendGrid();\n        this._createChart(this._selectedOption);\n        if (this._data.length > 1) this._createSelectionBox();\n        if (this.options.expand) this._expand();\n    },\n    _initToggle() {\n        if (!L.Browser.touch) {\n            L.DomEvent.disableClickPropagation(this._container);\n        } else {\n            L.DomEvent.on(this._container, 'click', L.DomEvent.stopPropagation);\n        }\n        L.DomEvent.on(this._button, 'click', this._expand, this);\n        L.DomEvent.on(this._closeButton, 'click', this._expand, this);\n    },\n    _dragHandler() {\n        //we don´t want map events to occur here\n        d3.event.preventDefault();\n        d3.event.stopPropagation();\n        this._gotDragged = true;\n        this._drawDragRectangle();\n    },\n    /**\n     * Draws the currently dragged rectangle over the chart.\n     */\n    _drawDragRectangle() {\n        if (!this._dragStartCoords) {\n            return;\n        }\n        const dragEndCoords = this._dragCurrentCoords = d3.mouse(this._background.node())\n        const x1 = Math.min(this._dragStartCoords[0], dragEndCoords[0]),\n            x2 = Math.max(this._dragStartCoords[0], dragEndCoords[0])\n        if (!this._dragRectangle && !this._dragRectangleG) {\n            const g = d3.select(this._container).select(\"svg\").select(\"g\")\n            this._dragRectangleG = g.append(\"g\");\n            this._dragRectangle = this._dragRectangleG.append(\"rect\")\n                .attr(\"width\", x2 - x1)\n                .attr(\"height\", this._svgHeight)\n                .attr(\"x\", x1)\n                .attr('class', 'mouse-drag')\n                .style(\"fill\", \"grey\")\n                .style(\"opacity\", 0.5)\n                .style(\"pointer-events\", \"none\");\n        } else {\n            this._dragRectangle.attr(\"width\", x2 - x1)\n                .attr(\"x\", x1);\n        }\n    },\n    /**\n     * Removes the drag rectangle and zooms back to the total extent of the data.\n     */\n    _resetDrag() {\n        if (this._dragRectangleG) {\n            this._dragRectangleG.remove();\n            this._dragRectangleG = null;\n            this._dragRectangle = null;\n        }\n    },\n    /**\n     * Handles end of drag operations. Zooms the map to the selected items extent.\n     */\n    _dragEndHandler() {\n        if (!this._dragStartCoords || !this._gotDragged) {\n            this._dragStartCoords = null;\n            this._gotDragged = false;\n            this._resetDrag();\n            return;\n        }\n        const item1 = this._findItemForX(this._dragStartCoords[0]),\n            item2 = this._findItemForX(this._dragCurrentCoords[0])\n        this._fitSection(item1, item2);\n        this._dragStartCoords = null;\n        this._gotDragged = false;\n    },\n    _dragStartHandler() {\n        d3.event.preventDefault();\n        d3.event.stopPropagation();\n        this._gotDragged = false;\n        this._dragStartCoords = d3.mouse(this._background.node());\n    },\n    /*\n     * Calculates the full extent of the data array\n     */\n    _calculateFullExtent(data) {\n        if (!data || data.length < 1) {\n            throw new Error(\"no data in parameters\");\n        }\n        let full_extent = new L.latLngBounds(data[0].latlng, data[0].latlng);\n        data.forEach((item) => {\n            if (!full_extent.contains(item.latlng)) {\n                full_extent.extend(item.latlng);\n            }\n        });\n        return full_extent;\n    },\n    /**\n     * Make the map fit the route section between given indexes.\n     */\n    _fitSection(index1, index2) {\n        const start = Math.min(index1, index2), end = Math.max(index1, index2)\n        let ext\n        if (start !== end) {\n            ext = this._calculateFullExtent(this._areasFlattended.slice(start, end + 1));\n        } else {\n            ext = [this._areasFlattended[start].latlng, this._areasFlattended[end].latlng];\n        }\n        this._map.fitBounds(ext);\n    },\n    /**\n     * Expand container when button clicked and shrink when close-Button clicked\n     */\n    _expand() {\n        if (!this._showState) {\n            d3.select(this._button)\n                .style(\"display\", \"none\");\n            d3.select(this._container)\n                .selectAll('svg')\n                .style(\"display\", \"block\");\n            d3.select(this._closeButton)\n                .style(\"display\", \"block\");\n        } else {\n            d3.select(this._button)\n                .style(\"display\", \"block\");\n            d3.select(this._container)\n                .selectAll('svg')\n                .style(\"display\", \"none\");\n            d3.select(this._closeButton)\n                .style(\"display\", \"none\");\n        }\n        this._showState = !this._showState;\n        if(typeof this.options.expandCallback === \"function\"){\n            this.options.expandCallback(this._showState);\n        }\n    },\n    /**\n     * Removes the svg elements from the d3 chart\n     */\n    _removeChart() {\n        if (this._svg !== undefined) {\n            // remove areas\n            this._svg.selectAll(\"path.area\")\n                .remove();\n            // remove top border\n            this._svg.selectAll(\"path.border-top\")\n                .remove();\n            // remove legend\n            this._svg.selectAll(\".legend\")\n                .remove();\n            // remove horizontal Line\n            this._svg.selectAll(\".lineSelection\")\n                .remove();\n            this._svg.selectAll(\".horizontalLine\")\n                .remove();\n            this._svg.selectAll(\".horizontalLineText\")\n                .remove();\n        }\n    },\n    /**\n     * Creates a random int between 0 and max\n     */\n    _randomNumber: max => Math.round((Math.random() * (max - 0))),\n    _d3ColorCategorical: [{\n        \"name\": \"schemeAccent\"\n    }, {\n        \"name\": \"schemeDark2\"\n    }, {\n        \"name\": \"schemeSet2\"\n    }, {\n        \"name\": \"schemeSet1\"\n    }, {\n        \"name\": \"schemeCategory10\"\n    }, {\n        \"name\": \"schemeSet3\"\n    }, {\n        \"name\": \"schemePaired\"\n    }, {\n        \"name\": \"schemeCategory20\"\n    }, {\n        \"name\": \"schemeCategory20b\"\n    }, {\n        \"name\": \"schemeCategory20c\"\n    }],\n    /**\n     * Prepares the data needed for the height graph\n     */\n    _prepareData() {\n        this._profile = {};\n        this._profile.coordinates = [];\n        this._profile.elevations = [];\n        this._profile.cumDistances = [];\n        this._profile.cumDistances.push(0);\n        this._profile.blocks = [];\n        const data = this._data\n        const categorical = []\n        let colorScale\n        if (this._mappings === undefined) {\n            const randomNumber = this._randomNumber(categorical.length)\n            colorScale = d3.scaleOrdinal(d3[this._d3ColorCategorical[randomNumber].name]);\n        }\n        for (let y = 0; y < data.length; y++) {\n            let cumDistance = 0\n            this._profile.blocks[y] = {};\n            this._profile.blocks[y].info = {\n                id: y,\n                text: data[y].properties.summary\n            };\n            this._profile.blocks[y].distances = [];\n            this._profile.blocks[y].attributes = [];\n            this._profile.blocks[y].geometries = [];\n            this._profile.blocks[y].legend = {};\n            let i, cnt = 0\n            const usedColors = {}\n            for (i = 0; i < data[y].features.length; i++) {\n                // data is redundant in every element of data which is why we collect it once\n                let altitude, ptA, ptB, ptDistance\n                const geometry = []\n                const coordsLength = data[y].features[i].geometry.coordinates.length\n                // save attribute types related to blocks\n                const attributeType = data[y].features[i].properties.attributeType\n                // check if mappings are defined, otherwise random colors\n                let text, color\n                if (this._mappings === undefined) {\n                    if (attributeType in usedColors) {\n                        text = attributeType;\n                        color = usedColors[attributeType];\n                    } else {\n                        text = attributeType;\n                        color = colorScale(i);\n                        usedColors[attributeType] = color;\n                    }\n                } else {\n                    text = this._mappings[data[y].properties.summary][attributeType].text;\n                    color = this._mappings[data[y].properties.summary][attributeType].color;\n                }\n                const attribute = {\n                    type: attributeType, text: text, color: color\n                }\n                this._profile.blocks[y].attributes.push(attribute);\n                // add to legend\n                if (!(attributeType in this._profile.blocks[y].legend)) {\n                    this._profile.blocks[y].legend[attributeType] = attribute;\n                }\n                for (let j = 0; j < coordsLength; j++) {\n                    ptA = new L.LatLng(data[y].features[i].geometry.coordinates[j][1], data[y].features[i].geometry.coordinates[j][0]);\n                    altitude = data[y].features[i].geometry.coordinates[j][2];\n                    // add elevations, coordinates and point distances only once\n                    // last point in feature is first of next which is why we have to juggle with indices\n                    if (j < coordsLength - 1) {\n                        ptB = new L.LatLng(data[y].features[i].geometry.coordinates[j + 1][1], data[y].features[i].geometry.coordinates[j + 1][0]);\n                        ptDistance = ptA.distanceTo(ptB) / 1000;\n                        // calculate distances of specific block\n                        cumDistance += ptDistance;\n                        if (y === 0) {\n                            this._profile.elevations.push(altitude);\n                            this._profile.coordinates.push(ptA);\n                            this._profile.cumDistances.push(cumDistance);\n                        }\n                        cnt += 1;\n                    } else if (j === coordsLength - 1 && i === data[y].features.length - 1) {\n                        if (y === 0) {\n                            this._profile.elevations.push(altitude);\n                            this._profile.coordinates.push(ptB);\n                        }\n                        cnt += 1;\n                    }\n                    // save the position which corresponds to the distance along the route.\n                    let position\n                    if (j === coordsLength - 1 && i < data[y].features.length - 1) {\n                        position = this._profile.cumDistances[cnt];\n                    } else {\n                        position = this._profile.cumDistances[cnt - 1];\n                    }\n                    geometry.push({\n                        altitude: altitude,\n                        position: position,\n                        x: ptA.lng,\n                        y: ptA.lat,\n                        latlng: ptA,\n                        type: text,\n                        areaIdx: i\n                    });\n                }\n                this._profile.blocks[y].distances.push(cumDistance);\n                this._profile.blocks[y].geometries.push(geometry);\n            }\n            if (y === data.length - 1) {\n                this._profile.totalDistance = cumDistance;\n            }\n        }\n    },\n    /**\n     * Creates a list with four x,y coords and other important info for the bars drawn with d3\n     */\n    _computeStats() {\n        const max = this._profile.maxElevation = d3.max(this._profile.elevations)\n        const min = this._profile.minElevation = d3.min(this._profile.elevations)\n        const quantile = this._profile.elevationQuantile = d3.quantile(this._profile.elevations, 0.75)\n        this._profile.yElevationMin = (quantile < (min + min / 10)) ? (min - max / 5 < 0 ? 0 : min - max / 5) : min - (max / 10);\n        this._profile.yElevationMax = quantile > (max - max / 10) ? max + (max / 3) : max;\n    },\n    /**\n     * Creates a marker on the map while hovering\n     * @param {Object} ll: actual coordinates of the route\n     * @param {Number} height: height as float\n     * @param {string} type: type of element\n     */\n    _showMarker(ll, height, type) {\n        const layerpoint = this._map.latLngToLayerPoint(ll)\n        const normalizedY = layerpoint.y - 75\n        if (!this._mouseHeightFocus) {\n            const heightG = d3.select(\".leaflet-overlay-pane svg\").append(\"g\")\n            this._mouseHeightFocus = heightG.append('svg:line')\n                .attr('class', 'height-focus line')\n                .attr('x2', '0')\n                .attr('y2', '0')\n                .attr('x1', '0')\n                .attr('y1', '0');\n            this._mouseHeightFocusLabel = heightG.append(\"g\")\n                .attr('class', 'height-focus label');\n            this._mouseHeightFocusLabelRect = this._mouseHeightFocusLabel.append(\"rect\")\n                .attr('class', 'bBox');\n            this._mouseHeightFocusLabelTextElev = this._mouseHeightFocusLabel.append(\"text\")\n                .attr('class', 'tspan');\n            this._mouseHeightFocusLabelTextType = this._mouseHeightFocusLabel.append(\"text\")\n                .attr('class', 'tspan');\n            const pointG = this._pointG = heightG.append(\"g\").attr(\"class\", \"height-focus circle\")\n            pointG.append(\"svg:circle\")\n                .attr(\"r\", 5)\n                .attr(\"cx\", 0)\n                .attr(\"cy\", 0)\n                .attr(\"class\", \"height-focus circle-lower\");\n        }\n        this._mouseHeightFocusLabel.style(\"display\", \"block\");\n        this._mouseHeightFocus.attr(\"x1\", layerpoint.x)\n            .attr(\"x2\", layerpoint.x)\n            .attr(\"y1\", layerpoint.y)\n            .attr(\"y2\", normalizedY)\n            .style(\"display\", \"block\");\n        this._pointG.attr(\"transform\", \"translate(\" + layerpoint.x + \",\" + layerpoint.y + \")\")\n            .style(\"display\", \"block\");\n        this._mouseHeightFocusLabelRect.attr(\"x\", layerpoint.x + 3)\n            .attr(\"y\", normalizedY)\n            .attr(\"class\", 'bBox');\n        this._mouseHeightFocusLabelTextElev.attr(\"x\", layerpoint.x + 5)\n            .attr(\"y\", normalizedY + 12)\n            .text(height + \" m\")\n            .attr(\"class\", \"tspan mouse-height-box-text\");\n        this._mouseHeightFocusLabelTextType.attr(\"x\", layerpoint.x + 5)\n            .attr(\"y\", normalizedY + 24)\n            .text(type)\n            .attr(\"class\", \"tspan mouse-height-box-text\");\n        const maxWidth = this._dynamicBoxSize(\"text.tspan\")[1]\n        // box size should change for profile none (no type)\n        const maxHeight = (type === \"\") ? 12 + 6 : 2 * 12 + 6\n        d3.selectAll('.bBox')\n            .attr(\"width\", maxWidth + 10)\n            .attr(\"height\", maxHeight);\n    },\n    /**\n     * Creates the elevation profile\n     */\n    _createChart(idx) {\n        let areas = this._profile.blocks[idx].geometries;\n        this._areasFlattended = [].concat.apply([], areas);\n        for (let i = 0; i < areas.length; i++) {\n            this._appendAreas(areas[i], idx, i);\n        }\n        this._createFocus();\n        this._appendBackground();\n        this._createBorderTopLine();\n        this._createLegend();\n        this._createHorizontalLine();\n    },\n    /**\n     *  Creates focus Line and focus box while hovering\n     */\n    _createFocus() {\n        const boxPosition = this._profile.yElevationMin\n        const textDistance = 15\n        if (this._focus) {\n            this._focus.remove();\n            this._focusLineGroup.remove();\n        }\n        this._focus = this._svg.append(\"g\")\n            .attr(\"class\", \"focusbox\");\n        // background box\n        this._focusRect = this._focus.append(\"rect\")\n            .attr(\"x\", 3)\n            .attr(\"y\", -this._y(boxPosition))\n            .attr(\"display\", \"none\");\n        // text line 1\n        this._focusDistance = this._focus.append(\"text\")\n            .attr(\"x\", 7)\n            .attr(\"y\", -this._y(boxPosition) + textDistance)\n            .attr(\"id\", \"distance\")\n            .text(this._getTranslation('distance')+':');\n        // text line 2\n        this._focusHeight = this._focus.append(\"text\")\n            .attr(\"x\", 7)\n            .attr(\"y\", -this._y(boxPosition) + 2 * textDistance)\n            .attr(\"id\", \"height\")\n            .text(this._getTranslation('elevation')+':');\n        // text line 3\n        this._focusBlockDistance = this._focus.append(\"text\")\n            .attr(\"x\", 7)\n            .attr(\"y\", -this._y(boxPosition) + 3 * textDistance)\n            .attr(\"id\", \"blockdistance\")\n            .text(this._getTranslation('segment_length')+':');\n        // text line 4\n        this._focusType = this._focus.append(\"text\")\n            .attr(\"x\", 7)\n            .attr(\"y\", -this._y(boxPosition) + 4 * textDistance)\n            .attr(\"id\", \"type\")\n            .text(this._getTranslation('type')+':');\n        this._areaTspan = this._focusBlockDistance.append('tspan')\n            .attr(\"class\", \"tspan\");\n        this._typeTspan = this._focusType.append('tspan')\n            .attr(\"class\", \"tspan\");\n        const height = this._dynamicBoxSize(\".focusbox text\")[0]\n        d3.selectAll('.focusbox rect')\n            .attr(\"height\", height * textDistance + (textDistance / 2))\n            .attr(\"display\", \"block\");\n        this._focusLineGroup = this._svg.append(\"g\")\n            .attr(\"class\", \"focusLine\");\n        this._focusLine = this._focusLineGroup.append(\"line\")\n            .attr(\"y1\", 0)\n            .attr(\"y2\", this._y(this._profile.yElevationMin));\n        this._distTspan = this._focusDistance.append('tspan')\n            .attr(\"class\", \"tspan\");\n        this._altTspan = this._focusHeight.append('tspan')\n            .attr(\"class\", \"tspan\");\n    },\n    /**\n     *  Creates horizontal Line for dragging\n     */\n    _createHorizontalLine() {\n        const self = this\n        this._horizontalLine = this._svg.append(\"line\")\n            .attr(\"class\", \"horizontalLine\")\n            .attr(\"x1\", 0)\n            .attr(\"x2\", this._width - this._margin.left - this._margin.right)\n            .attr(\"y1\", this._y(this._profile.yElevationMin))\n            .attr(\"y2\", this._y(this._profile.yElevationMin))\n            .style(\"stroke\", \"black\");\n        this._elevationValueText = this._svg.append(\"text\")\n            .attr(\"class\", \"horizontalLineText\")\n            .attr(\"x\", this._width - this._margin.left - this._margin.right - 20)\n            .attr(\"y\", this._y(this._profile.yElevationMin)-10)\n            .attr(\"fill\", \"black\");\n        //triangle symbol as controller\n        const jsonTriangle = [\n            {\n                \"x\": this._width - this._margin.left - this._margin.right + 7,\n                \"y\": this._y(this._profile.yElevationMin),\n                \"color\": \"black\",\n                \"type\": d3.symbolTriangle,\n                \"angle\": -90,\n                \"size\": 100\n            }\n        ]\n        const dragstart = function (d) {\n            d3.select(this).raise().classed(\"active\", true)\n            d3.select(\".horizontalLine\").raise().classed(\"active\", true)\n        }\n\n        const dragged = function (d) {\n            const maxY = self._svgHeight\n            let eventY = d3.mouse(self._container)[1] - 10\n            d3.select(this)\n            .attr(\"transform\", d => \"translate(\" + d.x + \",\" + (eventY < 0 ? 0\n                : eventY > maxY ? maxY\n                    : eventY) + \") rotate(\" + d.angle + \")\");\n            d3.select(\".horizontalLine\")\n            .attr(\"y1\", (eventY < 0 ? 0 : (eventY > maxY ? maxY : eventY)))\n            .attr(\"y2\", (eventY < 0 ? 0 : (eventY > maxY ? maxY : eventY)));\n            if(eventY >= maxY){\n                self._highlightedCoords = [];\n            } else {\n                self._highlightedCoords = self._findCoordsForY(eventY);\n            }\n            d3.select(\".horizontalLineText\")\n            .attr(\"y\", (eventY <= 10 ? 0 : (eventY > maxY ? maxY-10 : eventY-10)))\n            .text(d3.format(\".0f\")(self._y.invert((eventY < 0 ? 0 : (eventY > maxY ? maxY : eventY)))) + \" m\");\n            self._removeMarkedSegmentsOnMap();\n            self._markSegmentsOnMap(self._highlightedCoords);\n        }\n\n        const dragend = function (d) {\n            d3.select(this)\n            .classed(\"active\", false);\n            d3.select(\".horizontalLine\")\n            .classed(\"active\", false);\n            self._removeMarkedSegmentsOnMap();\n            self._markSegmentsOnMap(self._highlightedCoords);\n        }\n\n        const horizontalDrag = this._svg.selectAll(\".horizontal-symbol\").data(jsonTriangle).enter().append(\"path\").\n            attr(\"class\", \"lineSelection\")\n            .attr(\"d\", d3.symbol().type(d => d.type).size(d => d.size))\n            .attr(\"transform\", d => \"translate(\" + d.x + \",\" + d.y + \") rotate(\" + d.angle + \")\")\n            .attr(\"id\", d => d.id)\n            .style(\"fill\", d => d.color)\n            .call(d3.drag().on(\"start\", dragstart).on(\"drag\", dragged).on(\"end\", dragend))\n    },\n    /**\n     * Highlights segments on the map above given elevation value\n     */\n    _markSegmentsOnMap(coords) {\n        if(coords){\n            if (coords.length > 1) {\n                // some other leaflet plugins can't deal with multi-Polylines very well\n                // therefore multiple single polylines are used here\n                this._markedSegments = L.featureGroup()\n                for (let linePart of coords) {\n                    L.polyline(\n                        linePart,\n                        this._highlightStyle\n                    ).addTo(this._markedSegments)\n                }\n                this._markedSegments.addTo(this._map)\n                .bringToFront()\n            } else {\n                this._markedSegments = L.polyline(coords, this._highlightStyle).addTo(this._map);\n            }\n        }\n    },\n    /**\n     * Remove the highlighted segments from the map\n     */\n    _removeMarkedSegmentsOnMap() {\n        if (this._markedSegments !== undefined) {\n            this._map.removeLayer(this._markedSegments);\n        }\n    },\n    /**\n     * Defines the ranges and format of x- and y- scales and appends them\n     */\n\n    _appendScales() {\n        const shortDist = Boolean(this._profile.totalDistance <= 10)\n        const yHeightMin = this._profile.yElevationMin\n        const yHeightMax = this._profile.yElevationMax\n        const margin = this._margin, width = this._width - this._margin.left - this._margin.right,\n            height = this._height - this._margin.top - this._margin.bottom\n        this._x = d3.scaleLinear()\n            .range([0, width]);\n        this._y = d3.scaleLinear()\n            .range([height, 0]);\n        this._x.domain([0, this._profile.totalDistance]);\n        this._y.domain([yHeightMin, yHeightMax]);\n        if (shortDist === true) {\n            this._xAxis = d3.axisBottom()\n                .scale(this._x)\n                .tickFormat(d => d3.format(\".2f\")(d) + \" km\");\n        } else {\n            this._xAxis = d3.axisBottom()\n                .scale(this._x)\n                .tickFormat(d => d3.format(\".0f\")(d) + \" km\");\n        }\n        if(this.options.xTicks !== undefined){\n            this._xAxis.ticks(Math.pow(2, this.options.xTicks));\n        }\n        this._yAxis = d3.axisLeft()\n            .scale(this._y)\n            .tickFormat(d => d + \" m\");\n        if(this.options.yTicks !== undefined){\n            this._yAxis.ticks(Math.pow(2, this.options.yTicks));\n        }\n        this._yEndAxis = d3.axisRight()\n            .scale(this._yEnd)\n            .ticks(0);\n    },\n    /**\n     * Appends a background and adds mouse handlers\n     */\n    _appendBackground() {\n        const background = this._background = d3.select(this._container)\n            .select(\"svg\")\n            .select(\"g\")\n            .append(\"rect\")\n            .attr(\"width\", this._svgWidth)\n            .attr(\"height\", this._svgHeight)\n            .style(\"fill\", \"none\")\n            .style(\"stroke\", \"none\")\n            .style(\"pointer-events\", \"all\")\n            .on(\"mousemove.focusbox\", this._mousemoveHandler.bind(this))\n            .on(\"mouseout.focusbox\", this._mouseoutHandler.bind(this))\n        if (L.Browser.android) {\n            background.on(\"touchstart.drag\", this._dragHandler.bind(this))\n                .on(\"touchstart.drag\", this._dragStartHandler.bind(this))\n                .on(\"touchstart.focusbox\", this._mousemoveHandler.bind(this));\n            L.DomEvent.on(this._container, 'touchend', this._dragEndHandler, this);\n        } else {\n            background.on(\"mousemove.focusbox\", this._mousemoveHandler.bind(this))\n                .on(\"mouseout.focusbox\", this._mouseoutHandler.bind(this))\n                .on(\"mousedown.drag\", this._dragStartHandler.bind(this))\n                .on(\"mousemove.drag\", this._dragHandler.bind(this));\n            L.DomEvent.on(this._container, 'mouseup', this._dragEndHandler, this);\n        }\n    },\n    /**\n     * Appends a grid to the graph\n     */\n    _appendGrid() {\n        this._svg.append(\"g\")\n            .attr(\"class\", \"grid\")\n            .attr(\"transform\", \"translate(0,\" + this._svgHeight + \")\")\n            .call(this._make_x_axis()\n                .tickSize(-this._svgHeight, 0, 0)\n                .tickFormat(\"\"));\n        this._svg.append(\"g\")\n            .attr(\"class\", \"grid\")\n            .call(this._make_y_axis()\n                .tickSize(-this._svgWidth, 0, 0)\n                .ticks(5)\n                .tickFormat(\"\"));\n        this._svg.append('g')\n            .attr(\"transform\", \"translate(0,\" + this._svgHeight + \")\")\n            .attr('class', 'x axis')\n            .call(this._xAxis);\n        this._svg.append('g')\n            .attr(\"transform\", \"translate(-2,0)\")\n            .attr('class', 'y axis')\n            .call(this._yAxis);\n    },\n    /**\n     * Appends the areas to the graph\n     */\n    _appendAreas(block, idx, eleIdx) {\n        const c = this._profile.blocks[idx].attributes[eleIdx].color\n        const self = this\n        const area = this._area = d3.area().x(d => {\n            const xDiagonalCoordinate = self._x(d.position)\n            d.xDiagonalCoordinate = xDiagonalCoordinate\n            return xDiagonalCoordinate\n        }).y0(this._svgHeight).y1(d => self._y(d.altitude)).curve(d3.curveLinear)\n        this._areapath = this._svg.append(\"path\")\n            .attr(\"class\", \"area\");\n        this._areapath.datum(block)\n            .attr(\"d\", this._area)\n            .attr(\"stroke\", c)\n            .style(\"fill\", c)\n            .style(\"pointer-events\", \"none\");\n    },\n    // grid lines in x axis function\n    _make_x_axis() {\n        return d3.axisBottom()\n            .scale(this._x);\n    },\n    // grid lines in y axis function\n    _make_y_axis() {\n        return d3.axisLeft()\n            .scale(this._y);\n    },\n    /**\n     * Appends a selection box for different blocks\n     */\n    _createSelectionBox() {\n        const self = this\n        const svg = d3.select(this._container).select(\"svg\")\n        const margin = this._margin, width = this._width - this._margin.left - this._margin.right,\n            height = this._height - this._margin.top - this._margin.bottom\n        const jsonTriangles = [\n            {\n                \"x\": width - 50,\n                \"y\": height + 48,\n                \"color\": \"#000\",\n                \"type\": d3.symbolTriangle,\n                \"id\": \"leftArrowSelection\",\n                \"angle\": -360\n            }, {\n                \"x\": width - 35,\n                \"y\": height + 45,\n                \"color\": \"#000\",\n                \"type\": d3.symbolTriangle,\n                \"id\": \"rightArrowSelection\",\n                \"angle\": 180\n            }\n        ]\n        const selectionSign = svg.selectAll(\".select-symbol\").data(jsonTriangles).enter().append(\"path\").\n            attr(\"class\", \"select-symbol\").attr(\"d\", d3.symbol().type(d => d.type)).attr(\"transform\", d => \"translate(\" + d.x + \",\" + d.y + \") rotate(\" + d.angle + \")\").attr(\"id\", d => d.id).style(\"fill\", d => d.color).on(\"click\", d => {\n                if (d.id === \"rightArrowSelection\") arrowRight()\n                if (d.id === \"leftArrowSelection\") arrowLeft()\n            })\n        const chooseSelection = (id) => {\n            const type = self._profile.blocks[id].info\n            const data = [\n                {\n                    \"selection\": type.text\n                }\n            ]\n            if (self._selectionText) self._selectionText.remove();\n            self._selectionText = svg.selectAll('selection_text')\n                .data(data)\n                .enter()\n                .append('text')\n                .attr(\"x\", width - 20)\n                .attr(\"y\", height + 50)\n                .text(d => d.selection)\n                .attr(\"class\", \"select-info\")\n                .attr(\"id\", \"selectionText\")\n        }\n        const length = this._profile.blocks.length\n        const id = this._selectedOption\n\n        chooseSelection(id);\n\n        let arrowRight = () => {\n            let idx = self._selectedOption += 1\n            if (idx === self._profile.blocks.length) {\n                self._selectedOption = idx = 0\n            }\n            chooseSelection(idx)\n            self._removeChart()\n            self._removeMarkedSegmentsOnMap()\n            self._createChart(idx)\n        }\n\n        let arrowLeft = () => {\n            let idx = self._selectedOption -= 1\n            if (idx === -1) {\n                self._selectedOption = idx = self._profile.blocks.length - 1\n            }\n            chooseSelection(idx)\n            self._removeChart()\n            self._removeMarkedSegmentsOnMap()\n            self._createChart(idx)\n        }\n    },\n    /**\n     * Creates and appends legend to chart\n     */\n    _createLegend() {\n        const self = this\n        const data = []\n        for (let item in this._profile.blocks[this._selectedOption].legend) {\n            data.push(this._profile.blocks[this._selectedOption].legend[item]);\n        }\n        const margin = this._margin, width = this._width - this._margin.left - this._margin.right,\n            height = this._height - this._margin.top - this._margin.bottom\n        const leg = [\n            {\n                \"text\": this._getTranslation(\"legend\")\n            }\n        ]\n        const legendRectSize = 7\n        const legendSpacing = 7\n        const legend = this._svg.selectAll(\".hlegend-hover\").data(data).enter().append(\"g\").attr(\"class\", \"legend\").\n            style(\"display\", \"none\").attr(\"transform\", (d, i) => {\n                const height = legendRectSize + legendSpacing\n                const offset = height * 2\n                const horizontal = legendRectSize - 15\n                const vertical = i * height - offset\n                return \"translate(\" + horizontal + \",\" + vertical + \")\"\n            })\n        legend.append('rect')\n            .attr('class', 'legend-rect')\n            .attr('x', 15)\n            .attr('y', 6 * 6)\n            .attr('width', 6)\n            .style('stroke', 'black')\n            .attr('height', 6)\n            .style('fill', (d, i) => d.color);\n        legend.append('text')\n            .attr('class', 'legend-text')\n            .attr('x', 30)\n            .attr('y', 6 * 7)\n            .text((d, i) => {\n                const textProp = d.text\n                self._boxBoundY = (height - (2 * height / 3) + 7) * i;\n                    return textProp;\n            });\n        let legendHover = this._svg.selectAll('.legend-hover')\n            .data(leg)\n            .enter()\n            .append('g')\n            .attr('class', 'legend-hover');\n        legendHover.append('text')\n            .attr('class', 'legend-menu')\n            .attr(\"class\", \"no-select\")\n            .attr('x', 15)\n            .attr('y', height + 40)\n            .text((d, i) => d.text)\n            .on('mouseover', () => {\n                d3.select('.legend-box')\n                    .style(\"display\", \"block\");\n                d3.selectAll('.legend')\n                    .style(\"display\", \"block\");\n            })\n            .on('mouseleave', () => {\n                d3.select('.legend-box')\n                    .style(\"display\", \"none\");\n                d3.selectAll('.legend')\n                    .style(\"display\", \"none\");\n            });\n    }, /**\n     * calculates the margins of boxes\n     * @param {String} className: name of the class\n     * @return {array} borders: number of text lines, widest range of text\n     */\n    _dynamicBoxSize(className) {\n        const cnt = d3.selectAll(className).nodes().length\n        const widths = []\n        for (let i = 0; i < cnt; i++) {\n            widths.push(d3.selectAll(className)\n                .nodes()[i].getBoundingClientRect()\n                .width);\n        }\n        const maxWidth = d3.max(widths)\n        return [cnt, maxWidth];\n    },\n    /**\n     * Creates top border line on graph\n     */\n    _createBorderTopLine() {\n        const self = this\n        const data = this._areasFlattended\n        const borderTopLine = d3.line()\n            .x(d => {\n                const x = self._x\n                return x(d.position)\n            })\n            .y(d => {\n                const y = self._y\n                return y(d.altitude)\n            })\n            .curve(d3.curveBasis)\n        this._svg.append(\"svg:path\")\n            .attr(\"d\", borderTopLine(data))\n            .attr('class', 'border-top');\n    },\n    /*\n     * Handles the mouseout event when the mouse leaves the background\n     */\n    _mouseoutHandler() {\n        for (let param of ['_focusLine', '_focus', '_pointG', '_mouseHeightFocus', '_mouseHeightFocusLabel'])\n            if (this[param]) {\n                this[param].style('display', 'none');\n            }\n    },\n    /*\n     * Handles the mouseover the chart and displays distance and altitude level\n     */\n    _mousemoveHandler(d, i, ctx) {\n        const coords = d3.mouse(this._svg.node())\n        let areaLength\n        const item = this._areasFlattended[this._findItemForX(coords[0])], alt = item.altitude, dist = item.position,\n            ll = item.latlng, areaIdx = item.areaIdx, type = item.type\n        const boxWidth = this._dynamicBoxSize(\".focusbox text\")[1] + 10\n        if (areaIdx === 0) {\n            areaLength = this._profile.blocks[this._selectedOption].distances[areaIdx];\n        } else {\n            areaLength = this._profile.blocks[this._selectedOption].distances[areaIdx] - this._profile.blocks[this._selectedOption].distances[areaIdx - 1];\n        }\n        this._showMarker(ll, alt, type);\n        this._distTspan.text(\" \" + dist.toFixed(1) + ' km');\n        this._altTspan.text(\" \" + alt + ' m');\n        this._areaTspan.text(\" \" + areaLength.toFixed(1) + ' km');\n        this._typeTspan.text(\" \" + type);\n        this._focusRect.attr(\"width\", boxWidth);\n        this._focusLine.style(\"display\", \"block\")\n            .attr('x1', this._x(dist))\n            .attr('x2', this._x(dist));\n        const xPositionBox = this._x(dist) - (boxWidth + 5)\n        const totalWidth = this._width - this._margin.left - this._margin.right\n        if (this._x(dist) + boxWidth < totalWidth) {\n            this._focus.style(\"display\", \"initial\")\n                .attr(\"transform\", \"translate(\" + this._x(dist) + \",\" + this._y(this._profile.yElevationMin) + \")\");\n        }\n        if (this._x(dist) + boxWidth > totalWidth) {\n            this._focus.style(\"display\", \"initial\")\n                .attr(\"transform\", \"translate(\" + xPositionBox + \",\" + this._y(this._profile.yElevationMin) + \")\");\n        }\n    },\n    /*\n     * Finds a data entry for a given x-coordinate of the diagram\n     */\n    _findItemForX(x) {\n        const bisect = d3.bisector(d => d.position).left\n        const xInvert = this._x.invert(x)\n        return bisect(this._areasFlattended, xInvert);\n    },\n    /*\n     * Finds data entries above a given y-elevation value and returns geo-coordinates\n     */\n    _findCoordsForY(y) {\n        let bisect = (b, yInvert) => {\n            //save indexes of elevation values above the horizontal line\n            const list = []\n            for (let i = 0; i < b.length; i++) {\n                if (b[i].altitude >= yInvert) {\n                    list.push(i);\n                }\n            }\n            //split index list into coherent blocks of coordinates\n            const newList = []\n            let start = 0\n            for (let j = 0; j < list.length - 1; j++) {\n                if (list[j + 1] !== list[j] + 1) {\n                    newList.push(list.slice(start, j + 1));\n                    start = j + 1;\n                }\n            }\n            newList.push(list.slice(start, list.length));\n            //get lat lon coordinates based on indexes\n            for (let k = 0; k < newList.length; k++) {\n                for (let l = 0; l < newList[k].length; l++) {\n                    newList[k][l] = b[newList[k][l]].latlng;\n                }\n            }\n            return newList;\n        }\n\n        const yInvert = this._y.invert(y)\n        return bisect(this._areasFlattended, yInvert);\n    },\n    /*\n     * Checks the user passed translations, if they don't exist, fallback to the default translations\n     */\n    _getTranslation(key) {\n        if(this.options.translation[key])\n            return this.options.translation[key];\n        if(this._defaultTranslation[key])\n            return this._defaultTranslation[key];\n        console.error(\"Unexpected error when looking up the translation for \"+key);\n        return 'No translation found';\n    }\n});\nL.control.heightgraph = function(options) {\n    return new L.Control.Heightgraph(options)\n}\n"],"file":"L.Control.Heightgraph.js"}