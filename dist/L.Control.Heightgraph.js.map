{"version":3,"sources":["../src/L.Control.Heightgraph.js"],"names":["L","Control","Heightgraph","extend","options","position","width","height","margins","top","right","bottom","left","mappings","undefined","expand","expandControls","translation","expandCallback","xTicks","yTicks","highlightStyle","_defaultTranslation","distance","elevation","segment_length","type","legend","_init_options","_margin","_width","_height","_mappings","_svgWidth","_svgHeight","_selectedOption","_highlightStyle","color","onAdd","map","container","_container","DomUtil","create","DomEvent","disableClickPropagation","buttonContainer","_button","link","closeButton","_closeButton","_showState","_initToggle","svg","_svg","d3","select","append","attr","onRemove","_removeMarkedSegmentsOnMap","addData","data","selectAll","remove","_data","_prepareData","_computeStats","_onAddData","_appendScales","_appendGrid","_createChart","length","_createSelectionBox","_expand","Browser","touch","on","stopPropagation","_dragHandler","event","preventDefault","_gotDragged","_drawDragRectangle","_dragStartCoords","dragEndCoords","_dragCurrentCoords","mouse","_background","node","x1","Math","min","x2","max","_dragRectangle","_dragRectangleG","g","style","_resetDrag","fullExtent","_calculateFullExtent","_areasFlattended","_map","fitBounds","_dragEndHandler","item1","_findItemForX","item2","_fitSection","_dragStartHandler","full_extent","latLngBounds","latlng","forEach","item","contains","index1","index2","start","end","ext","slice","_removeChart","_randomNumber","round","random","_d3ColorCategorical","_profile","coordinates","elevations","cumDistances","push","blocks","categorical","colorScale","randomNumber","scaleOrdinal","name","y","cumDistance","info","id","text","properties","summary","distances","attributes","geometries","i","cnt","usedColors","features","altitude","ptA","ptB","ptDistance","geometry","coordsLength","attributeType","attribute","j","LatLng","distanceTo","x","lng","lat","areaIdx","totalDistance","maxElevation","minElevation","quantile","elevationQuantile","yElevationMin","yElevationMax","_showMarker","ll","layerpoint","latLngToLayerPoint","normalizedY","_mouseHeightFocus","heightG","_mouseHeightFocusLabel","_mouseHeightFocusLabelRect","_mouseHeightFocusLabelTextElev","_mouseHeightFocusLabelTextType","pointG","_pointG","maxWidth","_dynamicBoxSize","maxHeight","idx","areas","concat","apply","_appendAreas","_createFocus","_appendBackground","_createBorderTopLine","_createLegend","_createHorizontalLine","boxPosition","textDistance","_focus","_focusLineGroup","_focusRect","_y","_focusDistance","_getTranslation","_focusHeight","_focusBlockDistance","_focusType","_areaTspan","_typeTspan","_focusLine","_distTspan","_altTspan","self","_horizontalLine","_elevationValueText","jsonTriangle","symbolTriangle","dragstart","d","raise","classed","dragged","maxY","eventY","angle","_highlightedCoords","_findCoordsForY","format","invert","_markSegmentsOnMap","dragend","horizontalDrag","enter","symbol","size","call","drag","coords","_markedSegments","featureGroup","linePart","polyline","addTo","bringToFront","removeLayer","shortDist","Boolean","yHeightMin","yHeightMax","margin","_x","scaleLinear","range","domain","_xAxis","axisBottom","scale","tickFormat","ticks","pow","_yAxis","axisLeft","_yEndAxis","axisRight","_yEnd","background","_mousemoveHandler","bind","_mouseoutHandler","android","_make_x_axis","tickSize","_make_y_axis","block","eleIdx","c","area","_area","xDiagonalCoordinate","y0","y1","curve","curveLinear","_areapath","datum","jsonTriangles","selectionSign","arrowRight","arrowLeft","chooseSelection","_selectionText","selection","leg","legendRectSize","legendSpacing","offset","horizontal","vertical","textProp","_boxBoundY","legendHover","className","nodes","widths","getBoundingClientRect","borderTopLine","line","curveBasis","param","_mapMousemoveHandler","evt","closestItem","closestDistance","exactMatchRounding","latDiff","lngDiff","abs","_internalMousemoveHandler","ctx","areaLength","alt","dist","boxWidth","toFixed","xPositionBox","totalWidth","bisect","bisector","xInvert","b","yInvert","list","newList","k","l","key","console","error","control","heightgraph"],"mappings":"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","sourcesContent":["L.Control.Heightgraph = L.Control.extend({\n    options: {\n        position: \"bottomright\",\n        width: 800,\n        height: 280,\n        margins: {\n            top: 10,\n            right: 30,\n            bottom: 55,\n            left: 50\n        },\n        mappings: undefined,\n        expand: true,\n        expandControls: true,\n        translation: {},\n        expandCallback: undefined,\n        xTicks: undefined,\n        yTicks: undefined,\n        highlightStyle: undefined\n    },\n    _defaultTranslation: {\n        distance: \"Distance\",\n        elevation: \"Elevation\",\n        segment_length: \"Segment length\",\n        type: \"Type\",\n        legend: \"Legend\"\n    },\n    _init_options() {\n        this._margin = this.options.margins;\n        this._width = this.options.width;\n        this._height = this.options.height;\n        this._mappings = this.options.mappings;\n        this._svgWidth = this._width - this._margin.left - this._margin.right;\n        this._svgHeight = this._height - this._margin.top - this._margin.bottom;\n        this._selectedOption = 0\n        this._highlightStyle = this.options.highlightStyle || {color: 'red'}\n    },\n    onAdd(map) {\n        let container = this._container = L.DomUtil.create(\"div\", \"heightgraph\")\n        L.DomEvent.disableClickPropagation(container);\n        if (this.options.expandControls) {\n            let buttonContainer = this._button = L.DomUtil.create('div', \"heightgraph-toggle\", container);\n            const link = L.DomUtil.create(\"a\", \"heightgraph-toggle-icon\", buttonContainer)\n            const closeButton = this._closeButton = L.DomUtil.create(\"a\", \"heightgraph-close-icon\", container)\n        }\n        this._showState = false;\n        this._initToggle();\n        this._init_options();\n        const svg = this._svg = d3.select(this._container).append(\"svg\").attr(\"class\", \"heightgraph-container\").\n            attr(\"width\", this._svgWidth + this._margin.left + this._margin.right).\n            attr(\"height\", this._svgHeight + this._margin.top + this._margin.bottom).append(\"g\").\n            attr(\"transform\", \"translate(\" + this._margin.left + \",\" + this._margin.top + \")\")\n        return container;\n    },\n    onRemove(map) {\n        this._removeMarkedSegmentsOnMap();\n        this._container = null;\n        this._svg = undefined;\n    },\n    /**\n     * add Data from geoJson and call all functions\n     * @param {Object} data\n     */\n    addData(data) {\n        if (this._svg !== undefined) {\n            this._svg.selectAll(\"*\")\n                .remove();\n        }\n\n        this._data = data;\n        this._prepareData();\n        this._computeStats();\n\n        this._onAddData();\n    },\n    /**\n     * Trigger a re-render of the chart based on the existing data (e.g. on container resize).\n     */\n    _onAddData() {\n        this._init_options();\n        this._appendScales();\n        this._appendGrid();\n        this._createChart(this._selectedOption);\n        if (this._data.length > 1) this._createSelectionBox();\n        if (this.options.expand) this._expand();\n    },\n    _initToggle() {\n        if (!L.Browser.touch) {\n            L.DomEvent.disableClickPropagation(this._container);\n        } else {\n            L.DomEvent.on(this._container, 'click', L.DomEvent.stopPropagation);\n        }\n        if (this.options.expandControls) {\n            L.DomEvent.on(this._button, 'click', this._expand, this);\n            L.DomEvent.on(this._closeButton, 'click', this._expand, this);\n        }\n    },\n    _dragHandler() {\n        //we don´t want map events to occur here\n        d3.event.preventDefault();\n        d3.event.stopPropagation();\n        this._gotDragged = true;\n        this._drawDragRectangle();\n    },\n    /**\n     * Draws the currently dragged rectangle over the chart.\n     */\n    _drawDragRectangle() {\n        if (!this._dragStartCoords) {\n            return;\n        }\n        const dragEndCoords = this._dragCurrentCoords = d3.mouse(this._background.node())\n        const x1 = Math.min(this._dragStartCoords[0], dragEndCoords[0]),\n            x2 = Math.max(this._dragStartCoords[0], dragEndCoords[0])\n        if (!this._dragRectangle && !this._dragRectangleG) {\n            const g = d3.select(this._container).select(\"svg\").select(\"g\")\n            this._dragRectangleG = g.append(\"g\");\n            this._dragRectangle = this._dragRectangleG.append(\"rect\")\n                .attr(\"width\", x2 - x1)\n                .attr(\"height\", this._svgHeight)\n                .attr(\"x\", x1)\n                .attr('class', 'mouse-drag')\n                .style(\"fill\", \"grey\")\n                .style(\"opacity\", 0.5)\n                .style(\"pointer-events\", \"none\");\n        } else {\n            this._dragRectangle.attr(\"width\", x2 - x1)\n                .attr(\"x\", x1);\n        }\n    },\n    /**\n     * Removes the drag rectangle and zooms back to the total extent of the data.\n     */\n    _resetDrag() {\n        if (this._dragRectangleG) {\n            this._dragRectangleG.remove();\n            this._dragRectangleG = null;\n            this._dragRectangle = null;\n\n            // Performance improvement: we could cache the full extend when addData() is called\n            let fullExtent = this._calculateFullExtent(this._areasFlattended);\n            fullExtent && this._map.fitBounds(fullExtent);\n        }\n    },\n    /**\n     * Handles end of drag operations. Zooms the map to the selected items extent.\n     */\n    _dragEndHandler() {\n        if (!this._dragStartCoords || !this._gotDragged) {\n            this._dragStartCoords = null;\n            this._gotDragged = false;\n            this._resetDrag();\n            return;\n        }\n        const item1 = this._findItemForX(this._dragStartCoords[0]),\n            item2 = this._findItemForX(this._dragCurrentCoords[0])\n        this._fitSection(item1, item2);\n        this._dragStartCoords = null;\n        this._gotDragged = false;\n    },\n    _dragStartHandler() {\n        d3.event.preventDefault();\n        d3.event.stopPropagation();\n        this._gotDragged = false;\n        this._dragStartCoords = d3.mouse(this._background.node());\n    },\n    /*\n     * Calculates the full extent of the data array\n     */\n    _calculateFullExtent(data) {\n        if (!data || data.length < 1) {\n            return null;\n        }\n        let full_extent = new L.latLngBounds(data[0].latlng, data[0].latlng);\n        data.forEach((item) => {\n            if (!full_extent.contains(item.latlng)) {\n                full_extent.extend(item.latlng);\n            }\n        });\n        return full_extent;\n    },\n    /**\n     * Make the map fit the route section between given indexes.\n     */\n    _fitSection(index1, index2) {\n        const start = Math.min(index1, index2), end = Math.max(index1, index2)\n        let ext\n        if (start !== end) {\n            ext = this._calculateFullExtent(this._areasFlattended.slice(start, end + 1));\n        } else if (this._areasFlattended.length > 0) {\n            ext = [this._areasFlattended[start].latlng, this._areasFlattended[end].latlng];\n        }\n        ext && this._map.fitBounds(ext);\n    },\n    /**\n     * Expand container when button clicked and shrink when close-Button clicked\n     */\n    _expand() {\n        if (this.options.expandControls !== true) {\n            // always expand, never collapse\n            this._showState = false;\n        }\n        if (!this._showState) {\n            d3.select(this._button)\n                .style(\"display\", \"none\");\n            d3.select(this._container)\n                .selectAll('svg')\n                .style(\"display\", \"block\");\n            d3.select(this._closeButton)\n                .style(\"display\", \"block\");\n        } else {\n            d3.select(this._button)\n                .style(\"display\", \"block\");\n            d3.select(this._container)\n                .selectAll('svg')\n                .style(\"display\", \"none\");\n            d3.select(this._closeButton)\n                .style(\"display\", \"none\");\n        }\n        this._showState = !this._showState;\n        if(typeof this.options.expandCallback === \"function\"){\n            this.options.expandCallback(this._showState);\n        }\n    },\n    /**\n     * Removes the svg elements from the d3 chart\n     */\n    _removeChart() {\n        if (this._svg !== undefined) {\n            // remove areas\n            this._svg.selectAll(\"path.area\")\n                .remove();\n            // remove top border\n            this._svg.selectAll(\"path.border-top\")\n                .remove();\n            // remove legend\n            this._svg.selectAll(\".legend\")\n                .remove();\n            // remove horizontal Line\n            this._svg.selectAll(\".lineSelection\")\n                .remove();\n            this._svg.selectAll(\".horizontalLine\")\n                .remove();\n            this._svg.selectAll(\".horizontalLineText\")\n                .remove();\n        }\n    },\n    /**\n     * Creates a random int between 0 and max\n     */\n    _randomNumber: max => Math.round((Math.random() * (max - 0))),\n    _d3ColorCategorical: [{\n        \"name\": \"schemeAccent\"\n    }, {\n        \"name\": \"schemeDark2\"\n    }, {\n        \"name\": \"schemeSet2\"\n    }, {\n        \"name\": \"schemeSet1\"\n    }, {\n        \"name\": \"schemeCategory10\"\n    }, {\n        \"name\": \"schemeSet3\"\n    }, {\n        \"name\": \"schemePaired\"\n    }, {\n        \"name\": \"schemeCategory20\"\n    }, {\n        \"name\": \"schemeCategory20b\"\n    }, {\n        \"name\": \"schemeCategory20c\"\n    }],\n    /**\n     * Prepares the data needed for the height graph\n     */\n    _prepareData() {\n        this._profile = {};\n        this._profile.coordinates = [];\n        this._profile.elevations = [];\n        this._profile.cumDistances = [];\n        this._profile.cumDistances.push(0);\n        this._profile.blocks = [];\n        const data = this._data\n        const categorical = []\n        let colorScale\n        if (this._mappings === undefined) {\n            const randomNumber = this._randomNumber(categorical.length)\n            colorScale = d3.scaleOrdinal(d3[this._d3ColorCategorical[randomNumber].name]);\n        }\n        for (let y = 0; y < data.length; y++) {\n            let cumDistance = 0\n            this._profile.blocks[y] = {};\n            this._profile.blocks[y].info = {\n                id: y,\n                text: data[y].properties.summary\n            };\n            this._profile.blocks[y].distances = [];\n            this._profile.blocks[y].attributes = [];\n            this._profile.blocks[y].geometries = [];\n            this._profile.blocks[y].legend = {};\n            let i, cnt = 0\n            const usedColors = {}\n            for (i = 0; i < data[y].features.length; i++) {\n                // data is redundant in every element of data which is why we collect it once\n                let altitude, ptA, ptB, ptDistance\n                const geometry = []\n                const coordsLength = data[y].features[i].geometry.coordinates.length\n                // save attribute types related to blocks\n                const attributeType = data[y].features[i].properties.attributeType\n                // check if mappings are defined, otherwise random colors\n                let text, color\n                if (this._mappings === undefined) {\n                    if (attributeType in usedColors) {\n                        text = attributeType;\n                        color = usedColors[attributeType];\n                    } else {\n                        text = attributeType;\n                        color = colorScale(i);\n                        usedColors[attributeType] = color;\n                    }\n                } else {\n                    text = this._mappings[data[y].properties.summary][attributeType].text;\n                    color = this._mappings[data[y].properties.summary][attributeType].color;\n                }\n                const attribute = {\n                    type: attributeType, text: text, color: color\n                }\n                this._profile.blocks[y].attributes.push(attribute);\n                // add to legend\n                if (!(attributeType in this._profile.blocks[y].legend)) {\n                    this._profile.blocks[y].legend[attributeType] = attribute;\n                }\n                for (let j = 0; j < coordsLength; j++) {\n                    ptA = new L.LatLng(data[y].features[i].geometry.coordinates[j][1], data[y].features[i].geometry.coordinates[j][0]);\n                    altitude = data[y].features[i].geometry.coordinates[j][2];\n                    // add elevations, coordinates and point distances only once\n                    // last point in feature is first of next which is why we have to juggle with indices\n                    if (j < coordsLength - 1) {\n                        ptB = new L.LatLng(data[y].features[i].geometry.coordinates[j + 1][1], data[y].features[i].geometry.coordinates[j + 1][0]);\n                        ptDistance = ptA.distanceTo(ptB) / 1000;\n                        // calculate distances of specific block\n                        cumDistance += ptDistance;\n                        if (y === 0) {\n                            this._profile.elevations.push(altitude);\n                            this._profile.coordinates.push(ptA);\n                            this._profile.cumDistances.push(cumDistance);\n                        }\n                        cnt += 1;\n                    } else if (j === coordsLength - 1 && i === data[y].features.length - 1) {\n                        if (y === 0) {\n                            this._profile.elevations.push(altitude);\n                            this._profile.coordinates.push(ptB);\n                        }\n                        cnt += 1;\n                    }\n                    // save the position which corresponds to the distance along the route.\n                    let position\n                    if (j === coordsLength - 1 && i < data[y].features.length - 1) {\n                        position = this._profile.cumDistances[cnt];\n                    } else {\n                        position = this._profile.cumDistances[cnt - 1];\n                    }\n                    geometry.push({\n                        altitude: altitude,\n                        position: position,\n                        x: ptA.lng,\n                        y: ptA.lat,\n                        latlng: ptA,\n                        type: text,\n                        areaIdx: i\n                    });\n                }\n                this._profile.blocks[y].distances.push(cumDistance);\n                this._profile.blocks[y].geometries.push(geometry);\n            }\n            if (y === data.length - 1) {\n                this._profile.totalDistance = cumDistance;\n            }\n        }\n    },\n    /**\n     * Creates a list with four x,y coords and other important info for the bars drawn with d3\n     */\n    _computeStats() {\n        const max = this._profile.maxElevation = d3.max(this._profile.elevations)\n        const min = this._profile.minElevation = d3.min(this._profile.elevations)\n        const quantile = this._profile.elevationQuantile = d3.quantile(this._profile.elevations, 0.75)\n        this._profile.yElevationMin = (quantile < (min + min / 10)) ? (min - max / 5 < 0 ? 0 : min - max / 5) : min - (max / 10);\n        this._profile.yElevationMax = quantile > (max - max / 10) ? max + (max / 3) : max;\n    },\n    /**\n     * Creates a marker on the map while hovering\n     * @param {Object} ll: actual coordinates of the route\n     * @param {Number} height: height as float\n     * @param {string} type: type of element\n     */\n    _showMarker(ll, height, type) {\n        const layerpoint = this._map.latLngToLayerPoint(ll)\n        const normalizedY = layerpoint.y - 75\n        if (!this._mouseHeightFocus) {\n            const heightG = d3.select(\".leaflet-overlay-pane svg\").append(\"g\")\n            this._mouseHeightFocus = heightG.append('svg:line')\n                .attr('class', 'height-focus line')\n                .attr('x2', '0')\n                .attr('y2', '0')\n                .attr('x1', '0')\n                .attr('y1', '0');\n            this._mouseHeightFocusLabel = heightG.append(\"g\")\n                .attr('class', 'height-focus label');\n            this._mouseHeightFocusLabelRect = this._mouseHeightFocusLabel.append(\"rect\")\n                .attr('class', 'bBox');\n            this._mouseHeightFocusLabelTextElev = this._mouseHeightFocusLabel.append(\"text\")\n                .attr('class', 'tspan');\n            this._mouseHeightFocusLabelTextType = this._mouseHeightFocusLabel.append(\"text\")\n                .attr('class', 'tspan');\n            const pointG = this._pointG = heightG.append(\"g\").attr(\"class\", \"height-focus circle\")\n            pointG.append(\"svg:circle\")\n                .attr(\"r\", 5)\n                .attr(\"cx\", 0)\n                .attr(\"cy\", 0)\n                .attr(\"class\", \"height-focus circle-lower\");\n        }\n        this._mouseHeightFocusLabel.style(\"display\", \"block\");\n        this._mouseHeightFocus.attr(\"x1\", layerpoint.x)\n            .attr(\"x2\", layerpoint.x)\n            .attr(\"y1\", layerpoint.y)\n            .attr(\"y2\", normalizedY)\n            .style(\"display\", \"block\");\n        this._pointG.attr(\"transform\", \"translate(\" + layerpoint.x + \",\" + layerpoint.y + \")\")\n            .style(\"display\", \"block\");\n        this._mouseHeightFocusLabelRect.attr(\"x\", layerpoint.x + 3)\n            .attr(\"y\", normalizedY)\n            .attr(\"class\", 'bBox');\n        this._mouseHeightFocusLabelTextElev.attr(\"x\", layerpoint.x + 5)\n            .attr(\"y\", normalizedY + 12)\n            .text(height + \" m\")\n            .attr(\"class\", \"tspan mouse-height-box-text\");\n        this._mouseHeightFocusLabelTextType.attr(\"x\", layerpoint.x + 5)\n            .attr(\"y\", normalizedY + 24)\n            .text(type)\n            .attr(\"class\", \"tspan mouse-height-box-text\");\n        const maxWidth = this._dynamicBoxSize(\"text.tspan\")[1]\n        // box size should change for profile none (no type)\n        const maxHeight = (type === \"\") ? 12 + 6 : 2 * 12 + 6\n        d3.selectAll('.bBox')\n            .attr(\"width\", maxWidth + 10)\n            .attr(\"height\", maxHeight);\n    },\n    /**\n     * Creates the elevation profile\n     */\n    _createChart(idx) {\n        let areas = this._profile.blocks.length == 0\n                ? []\n                : this._profile.blocks[idx].geometries;\n        this._areasFlattended = [].concat.apply([], areas);\n        for (let i = 0; i < areas.length; i++) {\n            this._appendAreas(areas[i], idx, i);\n        }\n        this._createFocus();\n        this._appendBackground();\n        this._createBorderTopLine();\n        this._createLegend();\n        this._createHorizontalLine();\n    },\n    /**\n     *  Creates focus Line and focus box while hovering\n     */\n    _createFocus() {\n        const boxPosition = this._profile.yElevationMin\n        const textDistance = 15\n        if (this._focus) {\n            this._focus.remove();\n            this._focusLineGroup.remove();\n        }\n        this._focus = this._svg.append(\"g\")\n            .attr(\"class\", \"focusbox\");\n        // background box\n        this._focusRect = this._focus.append(\"rect\")\n            .attr(\"x\", 3)\n            .attr(\"y\", -this._y(boxPosition))\n            .attr(\"display\", \"none\");\n        // text line 1\n        this._focusDistance = this._focus.append(\"text\")\n            .attr(\"x\", 7)\n            .attr(\"y\", -this._y(boxPosition) + textDistance)\n            .attr(\"id\", \"heightgraph.distance\")\n            .text(this._getTranslation('distance')+':');\n        // text line 2\n        this._focusHeight = this._focus.append(\"text\")\n            .attr(\"x\", 7)\n            .attr(\"y\", -this._y(boxPosition) + 2 * textDistance)\n            .attr(\"id\", \"heightgraph.height\")\n            .text(this._getTranslation('elevation')+':');\n        // text line 3\n        this._focusBlockDistance = this._focus.append(\"text\")\n            .attr(\"x\", 7)\n            .attr(\"y\", -this._y(boxPosition) + 3 * textDistance)\n            .attr(\"id\", \"heightgraph.blockdistance\")\n            .text(this._getTranslation('segment_length')+':');\n        // text line 4\n        this._focusType = this._focus.append(\"text\")\n            .attr(\"x\", 7)\n            .attr(\"y\", -this._y(boxPosition) + 4 * textDistance)\n            .attr(\"id\", \"heightgraph.type\")\n            .text(this._getTranslation('type')+':');\n        this._areaTspan = this._focusBlockDistance.append('tspan')\n            .attr(\"class\", \"tspan\");\n        this._typeTspan = this._focusType.append('tspan')\n            .attr(\"class\", \"tspan\");\n        const height = this._dynamicBoxSize(\".focusbox text\")[0]\n        d3.selectAll('.focusbox rect')\n            .attr(\"height\", height * textDistance + (textDistance / 2))\n            .attr(\"display\", \"block\");\n        this._focusLineGroup = this._svg.append(\"g\")\n            .attr(\"class\", \"focusLine\");\n        this._focusLine = this._focusLineGroup.append(\"line\")\n            .attr(\"y1\", 0)\n            .attr(\"y2\", this._y(this._profile.yElevationMin));\n        this._distTspan = this._focusDistance.append('tspan')\n            .attr(\"class\", \"tspan\");\n        this._altTspan = this._focusHeight.append('tspan')\n            .attr(\"class\", \"tspan\");\n    },\n    /**\n     *  Creates horizontal Line for dragging\n     */\n    _createHorizontalLine() {\n        const self = this\n        this._horizontalLine = this._svg.append(\"line\")\n            .attr(\"class\", \"horizontalLine\")\n            .attr(\"x1\", 0)\n            .attr(\"x2\", this._width - this._margin.left - this._margin.right)\n            .attr(\"y1\", this._y(this._profile.yElevationMin))\n            .attr(\"y2\", this._y(this._profile.yElevationMin))\n            .style(\"stroke\", \"black\");\n        this._elevationValueText = this._svg.append(\"text\")\n            .attr(\"class\", \"horizontalLineText\")\n            .attr(\"x\", this._width - this._margin.left - this._margin.right - 20)\n            .attr(\"y\", this._y(this._profile.yElevationMin)-10)\n            .attr(\"fill\", \"black\");\n        //triangle symbol as controller\n        const jsonTriangle = [\n            {\n                \"x\": this._width - this._margin.left - this._margin.right + 7,\n                \"y\": this._y(this._profile.yElevationMin),\n                \"color\": \"black\",\n                \"type\": d3.symbolTriangle,\n                \"angle\": -90,\n                \"size\": 100\n            }\n        ]\n        const dragstart = function (d) {\n            d3.select(this).raise().classed(\"active\", true)\n            d3.select(\".horizontalLine\").raise().classed(\"active\", true)\n        }\n\n        const dragged = function (d) {\n            const maxY = self._svgHeight\n            let eventY = d3.mouse(self._container)[1] - 10\n            d3.select(this)\n            .attr(\"transform\", d => \"translate(\" + d.x + \",\" + (eventY < 0 ? 0\n                : eventY > maxY ? maxY\n                    : eventY) + \") rotate(\" + d.angle + \")\");\n            d3.select(\".horizontalLine\")\n            .attr(\"y1\", (eventY < 0 ? 0 : (eventY > maxY ? maxY : eventY)))\n            .attr(\"y2\", (eventY < 0 ? 0 : (eventY > maxY ? maxY : eventY)));\n            if(eventY >= maxY){\n                self._highlightedCoords = [];\n            } else {\n                self._highlightedCoords = self._findCoordsForY(eventY);\n            }\n            d3.select(\".horizontalLineText\")\n            .attr(\"y\", (eventY <= 10 ? 0 : (eventY > maxY ? maxY-10 : eventY-10)))\n            .text(d3.format(\".0f\")(self._y.invert((eventY < 0 ? 0 : (eventY > maxY ? maxY : eventY)))) + \" m\");\n            self._removeMarkedSegmentsOnMap();\n            self._markSegmentsOnMap(self._highlightedCoords);\n        }\n\n        const dragend = function (d) {\n            d3.select(this)\n            .classed(\"active\", false);\n            d3.select(\".horizontalLine\")\n            .classed(\"active\", false);\n            self._removeMarkedSegmentsOnMap();\n            self._markSegmentsOnMap(self._highlightedCoords);\n        }\n\n        const horizontalDrag = this._svg.selectAll(\".horizontal-symbol\").data(jsonTriangle).enter().append(\"path\").\n            attr(\"class\", \"lineSelection\")\n            .attr(\"d\", d3.symbol().type(d => d.type).size(d => d.size))\n            .attr(\"transform\", d => \"translate(\" + d.x + \",\" + d.y + \") rotate(\" + d.angle + \")\")\n            .attr(\"id\", d => d.id)\n            .style(\"fill\", d => d.color)\n            .call(d3.drag().on(\"start\", dragstart).on(\"drag\", dragged).on(\"end\", dragend))\n    },\n    /**\n     * Highlights segments on the map above given elevation value\n     */\n    _markSegmentsOnMap(coords) {\n        if(coords){\n            if (coords.length > 1) {\n                // some other leaflet plugins can't deal with multi-Polylines very well\n                // therefore multiple single polylines are used here\n                this._markedSegments = L.featureGroup()\n                for (let linePart of coords) {\n                    L.polyline(\n                        linePart,\n                        this._highlightStyle\n                    ).addTo(this._markedSegments)\n                }\n                this._markedSegments.addTo(this._map)\n                .bringToFront()\n            } else {\n                this._markedSegments = L.polyline(coords, this._highlightStyle).addTo(this._map);\n            }\n        }\n    },\n    /**\n     * Remove the highlighted segments from the map\n     */\n    _removeMarkedSegmentsOnMap() {\n        if (this._markedSegments !== undefined) {\n            this._map.removeLayer(this._markedSegments);\n        }\n    },\n    /**\n     * Defines the ranges and format of x- and y- scales and appends them\n     */\n\n    _appendScales() {\n        const shortDist = Boolean(this._profile.totalDistance <= 10)\n        const yHeightMin = this._profile.yElevationMin\n        const yHeightMax = this._profile.yElevationMax\n        const margin = this._margin, width = this._width - this._margin.left - this._margin.right,\n            height = this._height - this._margin.top - this._margin.bottom\n        this._x = d3.scaleLinear()\n            .range([0, width]);\n        this._y = d3.scaleLinear()\n            .range([height, 0]);\n        this._x.domain([0, this._profile.totalDistance]);\n        this._y.domain([yHeightMin, yHeightMax]);\n        if (shortDist === true) {\n            this._xAxis = d3.axisBottom()\n                .scale(this._x)\n                .tickFormat(d => d3.format(\".2f\")(d) + \" km\");\n        } else {\n            this._xAxis = d3.axisBottom()\n                .scale(this._x)\n                .tickFormat(d => d3.format(\".0f\")(d) + \" km\");\n        }\n        if(this.options.xTicks !== undefined){\n            this._xAxis.ticks(Math.pow(2, this.options.xTicks));\n        }\n        this._yAxis = d3.axisLeft()\n            .scale(this._y)\n            .tickFormat(d => d + \" m\");\n        if(this.options.yTicks !== undefined){\n            this._yAxis.ticks(Math.pow(2, this.options.yTicks));\n        }\n        this._yEndAxis = d3.axisRight()\n            .scale(this._yEnd)\n            .ticks(0);\n    },\n    /**\n     * Appends a background and adds mouse handlers\n     */\n    _appendBackground() {\n        const background = this._background = d3.select(this._container)\n            .select(\"svg\")\n            .select(\"g\")\n            .append(\"rect\")\n            .attr(\"width\", this._svgWidth)\n            .attr(\"height\", this._svgHeight)\n            .style(\"fill\", \"none\")\n            .style(\"stroke\", \"none\")\n            .style(\"pointer-events\", \"all\")\n            .on(\"mousemove.focusbox\", this._mousemoveHandler.bind(this))\n            .on(\"mouseout.focusbox\", this._mouseoutHandler.bind(this))\n        if (L.Browser.android) {\n            background.on(\"touchstart.drag\", this._dragHandler.bind(this))\n                .on(\"touchstart.drag\", this._dragStartHandler.bind(this))\n                .on(\"touchstart.focusbox\", this._mousemoveHandler.bind(this));\n            L.DomEvent.on(this._container, 'touchend', this._dragEndHandler, this);\n        } else {\n            background.on(\"mousemove.focusbox\", this._mousemoveHandler.bind(this))\n                .on(\"mouseout.focusbox\", this._mouseoutHandler.bind(this))\n                .on(\"mousedown.drag\", this._dragStartHandler.bind(this))\n                .on(\"mousemove.drag\", this._dragHandler.bind(this));\n            L.DomEvent.on(this._container, 'mouseup', this._dragEndHandler, this);\n        }\n    },\n    /**\n     * Appends a grid to the graph\n     */\n    _appendGrid() {\n        this._svg.append(\"g\")\n            .attr(\"class\", \"grid\")\n            .attr(\"transform\", \"translate(0,\" + this._svgHeight + \")\")\n            .call(this._make_x_axis()\n                .tickSize(-this._svgHeight, 0, 0)\n                .tickFormat(\"\"));\n        this._svg.append(\"g\")\n            .attr(\"class\", \"grid\")\n            .call(this._make_y_axis()\n                .tickSize(-this._svgWidth, 0, 0)\n                .ticks(5)\n                .tickFormat(\"\"));\n        this._svg.append('g')\n            .attr(\"transform\", \"translate(0,\" + this._svgHeight + \")\")\n            .attr('class', 'x axis')\n            .call(this._xAxis);\n        this._svg.append('g')\n            .attr(\"transform\", \"translate(-2,0)\")\n            .attr('class', 'y axis')\n            .call(this._yAxis);\n    },\n    /**\n     * Appends the areas to the graph\n     */\n    _appendAreas(block, idx, eleIdx) {\n        const c = this._profile.blocks[idx].attributes[eleIdx].color\n        const self = this\n        const area = this._area = d3.area().x(d => {\n            const xDiagonalCoordinate = self._x(d.position)\n            d.xDiagonalCoordinate = xDiagonalCoordinate\n            return xDiagonalCoordinate\n        }).y0(this._svgHeight).y1(d => self._y(d.altitude)).curve(d3.curveLinear)\n        this._areapath = this._svg.append(\"path\")\n            .attr(\"class\", \"area\");\n        this._areapath.datum(block)\n            .attr(\"d\", this._area)\n            .attr(\"stroke\", c)\n            .style(\"fill\", c)\n            .style(\"pointer-events\", \"none\");\n    },\n    // grid lines in x axis function\n    _make_x_axis() {\n        return d3.axisBottom()\n            .scale(this._x);\n    },\n    // grid lines in y axis function\n    _make_y_axis() {\n        return d3.axisLeft()\n            .scale(this._y);\n    },\n    /**\n     * Appends a selection box for different blocks\n     */\n    _createSelectionBox() {\n        const self = this\n        const svg = d3.select(this._container).select(\"svg\")\n        const margin = this._margin, width = this._width - this._margin.left - this._margin.right,\n            height = this._height - this._margin.top - this._margin.bottom\n        const jsonTriangles = [\n            {\n                \"x\": width - 50,\n                \"y\": height + 48,\n                \"color\": \"#000\",\n                \"type\": d3.symbolTriangle,\n                \"id\": \"leftArrowSelection\",\n                \"angle\": -360\n            }, {\n                \"x\": width - 35,\n                \"y\": height + 45,\n                \"color\": \"#000\",\n                \"type\": d3.symbolTriangle,\n                \"id\": \"rightArrowSelection\",\n                \"angle\": 180\n            }\n        ]\n        const selectionSign = svg.selectAll(\".select-symbol\").data(jsonTriangles).enter().append(\"path\").\n            attr(\"class\", \"select-symbol\").attr(\"d\", d3.symbol().type(d => d.type)).attr(\"transform\", d => \"translate(\" + d.x + \",\" + d.y + \") rotate(\" + d.angle + \")\").attr(\"id\", d => d.id).style(\"fill\", d => d.color).on(\"click\", d => {\n                if (d.id === \"rightArrowSelection\") arrowRight()\n                if (d.id === \"leftArrowSelection\") arrowLeft()\n            })\n        const chooseSelection = (id) => {\n            const type = self._profile.blocks[id].info\n            const data = [\n                {\n                    \"selection\": type.text\n                }\n            ]\n            if (self._selectionText) self._selectionText.remove();\n            self._selectionText = svg.selectAll('selection_text')\n                .data(data)\n                .enter()\n                .append('text')\n                .attr(\"x\", width - 20)\n                .attr(\"y\", height + 50)\n                .text(d => d.selection)\n                .attr(\"class\", \"select-info\")\n                .attr(\"id\", \"selectionText\")\n        }\n        const length = this._profile.blocks.length\n        const id = this._selectedOption\n\n        chooseSelection(id);\n\n        let arrowRight = () => {\n            let idx = self._selectedOption += 1\n            if (idx === self._profile.blocks.length) {\n                self._selectedOption = idx = 0\n            }\n            chooseSelection(idx)\n            self._removeChart()\n            self._removeMarkedSegmentsOnMap()\n            self._createChart(idx)\n        }\n\n        let arrowLeft = () => {\n            let idx = self._selectedOption -= 1\n            if (idx === -1) {\n                self._selectedOption = idx = self._profile.blocks.length - 1\n            }\n            chooseSelection(idx)\n            self._removeChart()\n            self._removeMarkedSegmentsOnMap()\n            self._createChart(idx)\n        }\n    },\n    /**\n     * Creates and appends legend to chart\n     */\n    _createLegend() {\n        const self = this\n        const data = []\n        if (this._profile.blocks.length > 0) {\n          for (let item in this._profile.blocks[this._selectedOption].legend) {\n              data.push(this._profile.blocks[this._selectedOption].legend[item]);\n          }\n        }\n        const margin = this._margin, width = this._width - this._margin.left - this._margin.right,\n            height = this._height - this._margin.top - this._margin.bottom\n        const leg = [\n            {\n                \"text\": this._getTranslation(\"legend\")\n            }\n        ]\n        const legendRectSize = 7\n        const legendSpacing = 7\n        const legend = this._svg.selectAll(\".hlegend-hover\").data(data).enter().append(\"g\").attr(\"class\", \"legend\").\n            style(\"display\", \"none\").attr(\"transform\", (d, i) => {\n                const height = legendRectSize + legendSpacing\n                const offset = height * 2\n                const horizontal = legendRectSize - 15\n                const vertical = i * height - offset\n                return \"translate(\" + horizontal + \",\" + vertical + \")\"\n            })\n        legend.append('rect')\n            .attr('class', 'legend-rect')\n            .attr('x', 15)\n            .attr('y', 6 * 6)\n            .attr('width', 6)\n            .style('stroke', 'black')\n            .attr('height', 6)\n            .style('fill', (d, i) => d.color);\n        legend.append('text')\n            .attr('class', 'legend-text')\n            .attr('x', 30)\n            .attr('y', 6 * 7)\n            .text((d, i) => {\n                const textProp = d.text\n                self._boxBoundY = (height - (2 * height / 3) + 7) * i;\n                    return textProp;\n            });\n        let legendHover = this._svg.selectAll('.legend-hover')\n            .data(leg)\n            .enter()\n            .append('g')\n            .attr('class', 'legend-hover');\n        legendHover.append('text')\n            .attr('class', 'legend-menu')\n            .attr(\"class\", \"no-select\")\n            .attr('x', 15)\n            .attr('y', height + 40)\n            .text((d, i) => d.text)\n            .on('mouseover', () => {\n                d3.select('.legend-box')\n                    .style(\"display\", \"block\");\n                d3.selectAll('.legend')\n                    .style(\"display\", \"block\");\n            })\n            .on('mouseleave', () => {\n                d3.select('.legend-box')\n                    .style(\"display\", \"none\");\n                d3.selectAll('.legend')\n                    .style(\"display\", \"none\");\n            });\n    }, /**\n     * calculates the margins of boxes\n     * @param {String} className: name of the class\n     * @return {array} borders: number of text lines, widest range of text\n     */\n    _dynamicBoxSize(className) {\n        const cnt = d3.selectAll(className).nodes().length\n        const widths = []\n        for (let i = 0; i < cnt; i++) {\n            widths.push(d3.selectAll(className)\n                .nodes()[i].getBoundingClientRect()\n                .width);\n        }\n        const maxWidth = d3.max(widths)\n        return [cnt, maxWidth];\n    },\n    /**\n     * Creates top border line on graph\n     */\n    _createBorderTopLine() {\n        const self = this\n        const data = this._areasFlattended\n        const borderTopLine = d3.line()\n            .x(d => {\n                const x = self._x\n                return x(d.position)\n            })\n            .y(d => {\n                const y = self._y\n                return y(d.altitude)\n            })\n            .curve(d3.curveBasis)\n        this._svg.append(\"svg:path\")\n            .attr(\"d\", borderTopLine(data))\n            .attr('class', 'border-top');\n    },\n    /*\n     * Handles the mouseout event when the mouse leaves the background\n     */\n    _mouseoutHandler() {\n        for (let param of ['_focusLine', '_focus', '_pointG', '_mouseHeightFocus', '_mouseHeightFocusLabel'])\n            if (this[param]) {\n                this[param].style('display', 'none');\n            }\n    },\n    /*\n     * Handles the mouseover the map and displays distance and altitude level.\n     * Since this does a lookup of the point on the graph\n     * the closest to the given latlng on the provided event, it could be slow.\n     */\n    _mapMousemoveHandler(evt) {\n        if (this._areasFlattended === false) {\n            return;\n        }\n        // initialize the vars for the closest item calculation\n        let closestItem = null;\n        // large enough to be trumped by any point on the chart\n        let closestDistance = 2 * Math.pow(100, 2);\n        // consider a good enough match if the given point (lat and lng) is within\n        // 1.1 meters of a point on the chart (there are 111,111 meters in a degree)\n        const exactMatchRounding = 1.1 / 111111;\n\n        for (i = 0; i < this._areasFlattended.length; i++) {\n            let item = this._areasFlattended[i];\n            let latDiff = evt.latlng.lat - item.latlng.lat;\n            let lngDiff = evt.latlng.lng - item.latlng.lng;\n            // first check for an almost exact match; it's simple and avoid further calculations\n            if (Math.abs(latDiff) < exactMatchRounding && Math.abs(lngDiff) < exactMatchRounding) {\n                this._internalMousemoveHandler(item);\n                break;\n            }\n            // calculate the squared distance from the current to the given;\n            // it's the squared distance, to avoid the expensive square root\n            const distance = Math.pow(latDiff, 2) + Math.pow(lngDiff, 2);\n            if (distance < closestDistance) {\n                closestItem = item;\n                closestDistance = distance;\n            }\n        }\n\n        closestItem && this._internalMousemoveHandler(closestItem);\n    },\n    /*\n     * Handles the mouseover the chart and displays distance and altitude level\n     */\n    _mousemoveHandler(d, i, ctx) {\n        const coords = d3.mouse(this._svg.node());\n        const item = this._areasFlattended[this._findItemForX(coords[0])];\n        item && this._internalMousemoveHandler(item);\n    },\n    /*\n     * Handles the mouseover, given the current item the mouse is over\n     */\n    _internalMousemoveHandler(item) {\n        let areaLength\n        const alt = item.altitude, dist = item.position,\n            ll = item.latlng, areaIdx = item.areaIdx, type = item.type\n        const boxWidth = this._dynamicBoxSize(\".focusbox text\")[1] + 10\n        if (areaIdx === 0) {\n            areaLength = this._profile.blocks[this._selectedOption].distances[areaIdx];\n        } else {\n            areaLength = this._profile.blocks[this._selectedOption].distances[areaIdx] - this._profile.blocks[this._selectedOption].distances[areaIdx - 1];\n        }\n        this._showMarker(ll, alt, type);\n        this._distTspan.text(\" \" + dist.toFixed(1) + ' km');\n        this._altTspan.text(\" \" + alt + ' m');\n        this._areaTspan.text(\" \" + areaLength.toFixed(1) + ' km');\n        this._typeTspan.text(\" \" + type);\n        this._focusRect.attr(\"width\", boxWidth);\n        this._focusLine.style(\"display\", \"block\")\n            .attr('x1', this._x(dist))\n            .attr('x2', this._x(dist));\n        const xPositionBox = this._x(dist) - (boxWidth + 5)\n        const totalWidth = this._width - this._margin.left - this._margin.right\n        if (this._x(dist) + boxWidth < totalWidth) {\n            this._focus.style(\"display\", \"initial\")\n                .attr(\"transform\", \"translate(\" + this._x(dist) + \",\" + this._y(this._profile.yElevationMin) + \")\");\n        }\n        if (this._x(dist) + boxWidth > totalWidth) {\n            this._focus.style(\"display\", \"initial\")\n                .attr(\"transform\", \"translate(\" + xPositionBox + \",\" + this._y(this._profile.yElevationMin) + \")\");\n        }\n    },\n    /*\n     * Finds a data entry for a given x-coordinate of the diagram\n     */\n    _findItemForX(x) {\n        const bisect = d3.bisector(d => d.position).left\n        const xInvert = this._x.invert(x)\n        return bisect(this._areasFlattended, xInvert);\n    },\n    /*\n     * Finds data entries above a given y-elevation value and returns geo-coordinates\n     */\n    _findCoordsForY(y) {\n        let bisect = (b, yInvert) => {\n            //save indexes of elevation values above the horizontal line\n            const list = []\n            for (let i = 0; i < b.length; i++) {\n                if (b[i].altitude >= yInvert) {\n                    list.push(i);\n                }\n            }\n            //split index list into coherent blocks of coordinates\n            const newList = []\n            let start = 0\n            for (let j = 0; j < list.length - 1; j++) {\n                if (list[j + 1] !== list[j] + 1) {\n                    newList.push(list.slice(start, j + 1));\n                    start = j + 1;\n                }\n            }\n            newList.push(list.slice(start, list.length));\n            //get lat lon coordinates based on indexes\n            for (let k = 0; k < newList.length; k++) {\n                for (let l = 0; l < newList[k].length; l++) {\n                    newList[k][l] = b[newList[k][l]].latlng;\n                }\n            }\n            return newList;\n        }\n\n        const yInvert = this._y.invert(y)\n        return bisect(this._areasFlattended, yInvert);\n    },\n    /*\n     * Checks the user passed translations, if they don't exist, fallback to the default translations\n     */\n    _getTranslation(key) {\n        if(this.options.translation[key])\n            return this.options.translation[key];\n        if(this._defaultTranslation[key])\n            return this._defaultTranslation[key];\n        console.error(\"Unexpected error when looking up the translation for \"+key);\n        return 'No translation found';\n    }\n});\nL.control.heightgraph = function(options) {\n    return new L.Control.Heightgraph(options)\n}\n"],"file":"L.Control.Heightgraph.js"}